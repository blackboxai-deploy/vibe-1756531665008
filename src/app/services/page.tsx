"use client";

import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Input } from "@/components/ui/input";
import { Alert, AlertDescription } from "@/components/ui/alert";
import { useState } from "react";

interface Service {
  id: string;
  name: string;
  description: string;
  category: string;
  phone: string;
  address?: string;
  workingHours: string;
  website?: string;
  isEmergency?: boolean;
  rating?: number;
  icon: string;
}

interface Utility {
  id: string;
  name: string;
  description: string;
  phone: string;
  emergencyPhone?: string;
  website: string;
  icon: string;
}

export default function ServicesPage() {
  const [activeTab, setActiveTab] = useState("services");
  const [searchQuery, setSearchQuery] = useState("");

  const services: Service[] = [
    {
      id: "medical1",
      name: "–ì–æ—Ä–æ–¥—Å–∫–∞—è –ø–æ–ª–∏–∫–ª–∏–Ω–∏–∫–∞ ‚Ññ1",
      description: "–ú–Ω–æ–≥–æ–ø—Ä–æ—Ñ–∏–ª—å–Ω–∞—è –ø–æ–ª–∏–∫–ª–∏–Ω–∏–∫–∞ —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ–º",
      category: "–ó–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ",
      phone: "+7 (800) 123-45-01",
      address: "—É–ª. –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è, 15",
      workingHours: "–ü–Ω-–ü—Ç: 8:00-20:00, –°–±: 9:00-15:00",
      website: "https://hospital1.example.com",
      rating: 4.3,
      icon: "üè•"
    },
    {
      id: "education1",
      name: "–®–∫–æ–ª–∞ ‚Ññ5",
      description: "–û–±—â–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è —à–∫–æ–ª–∞ —Å —É–≥–ª—É–±–ª–µ–Ω–Ω—ã–º –∏–∑—É—á–µ–Ω–∏–µ–º –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏",
      category: "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ",
      phone: "+7 (800) 123-45-05",
      address: "—É–ª. –®–∫–æ–ª—å–Ω–∞—è, 10",
      workingHours: "–ü–Ω-–ü—Ç: 8:00-17:00",
      rating: 4.6,
      icon: "üè´"
    },
    {
      id: "gov1",
      name: "–ú–§–¶ '–ú–æ–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã'",
      description: "–ü–æ–ª—É—á–µ–Ω–∏–µ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö —É—Å–ª—É–≥ –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ",
      category: "–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏",
      phone: "+7 (800) 123-45-10",
      address: "–ø—Ä. –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π, 25",
      workingHours: "–ü–Ω-–°–±: 8:00-20:00",
      website: "https://mfc.example.com",
      rating: 4.1,
      icon: "üèõÔ∏è"
    },
    {
      id: "bank1",
      name: "–û—Ç–¥–µ–ª–µ–Ω–∏–µ –°–±–µ—Ä–±–∞–Ω–∫–∞",
      description: "–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ —É—Å–ª—É–≥–∏ –∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏",
      category: "–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ —É—Å–ª—É–≥–∏",
      phone: "+7 (800) 123-45-15",
      address: "—É–ª. –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è, 8",
      workingHours: "–ü–Ω-–ü—Ç: 9:00-19:00, –°–±: 9:00-16:00",
      rating: 4.0,
      icon: "üè¶"
    },
    {
      id: "post1",
      name: "–ü–æ—á—Ç–∞ –†–æ—Å—Å–∏–∏",
      description: "–ü–æ—á—Ç–æ–≤—ã–µ —É—Å–ª—É–≥–∏ –∏ –¥–æ—Å—Ç–∞–≤–∫–∞",
      category: "–ü–æ—á—Ç–æ–≤—ã–µ —É—Å–ª—É–≥–∏",
      phone: "+7 (800) 123-45-20",
      address: "—É–ª. –ü–æ—á—Ç–æ–≤–∞—è, 3",
      workingHours: "–ü–Ω-–ü—Ç: 8:00-20:00, –°–±-–í—Å: 9:00-18:00",
      rating: 3.8,
      icon: "üìÆ"
    }
  ];

  const utilities: Utility[] = [
    {
      id: "water",
      name: "–í–æ–¥–æ–∫–∞–Ω–∞–ª",
      description: "–í–æ–¥–æ—Å–Ω–∞–±–∂–µ–Ω–∏–µ –∏ –≤–æ–¥–æ–æ—Ç–≤–µ–¥–µ–Ω–∏–µ",
      phone: "+7 (800) 123-46-01",
      emergencyPhone: "+7 (800) 123-46-99",
      website: "https://water.example.com",
      icon: "üíß"
    },
    {
      id: "gas",
      name: "–ì–∞–∑–æ–≤–∞—è —Å–ª—É–∂–±–∞",
      description: "–ì–∞–∑–æ—Å–Ω–∞–±–∂–µ–Ω–∏–µ –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –≥–∞–∑–æ–≤–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è",
      phone: "+7 (800) 123-47-01",
      emergencyPhone: "104",
      website: "https://gas.example.com",
      icon: "‚ö°"
    },
    {
      id: "electric",
      name: "–≠–ª–µ–∫—Ç—Ä–æ—Å–µ—Ç–∏",
      description: "–≠–ª–µ–∫—Ç—Ä–æ—Å–Ω–∞–±–∂–µ–Ω–∏–µ –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —ç–ª–µ–∫—Ç—Ä–æ—Å–µ—Ç–µ–π",
      phone: "+7 (800) 123-48-01",
      emergencyPhone: "+7 (800) 123-48-99",
      website: "https://electric.example.com",
      icon: "üîå"
    },
    {
      id: "heating",
      name: "–¢–µ–ø–ª–æ—Å–µ—Ç–∏",
      description: "–¢–µ–ø–ª–æ—Å–Ω–∞–±–∂–µ–Ω–∏–µ –∏ –æ—Ç–æ–ø–ª–µ–Ω–∏–µ",
      phone: "+7 (800) 123-49-01",
      emergencyPhone: "+7 (800) 123-49-99",
      website: "https://heating.example.com",
      icon: "üî•"
    }
  ];

  const emergencyServices = [
    { name: "–ü–æ–∂–∞—Ä–Ω–∞—è —Å–ª—É–∂–±–∞", phone: "101", icon: "üöí", color: "text-red-600" },
    { name: "–ü–æ–ª–∏—Ü–∏—è", phone: "102", icon: "üëÆ", color: "text-blue-600" },
    { name: "–°–∫–æ—Ä–∞—è –ø–æ–º–æ—â—å", phone: "103", icon: "üöë", color: "text-green-600" },
    { name: "–ì–∞–∑–æ–≤–∞—è —Å–ª—É–∂–±–∞", phone: "104", icon: "‚ö°", color: "text-yellow-600" },
    { name: "–ï–¥–∏–Ω–∞—è —Å–ª—É–∂–±–∞ —Å–ø–∞—Å–µ–Ω–∏—è", phone: "112", icon: "üÜò", color: "text-red-600" }
  ];



  const filteredServices = services.filter(service => {
    const matchesCategory = activeTab === "services" || service.category === activeTab.replace("services-", "");
    const matchesSearch = searchQuery === "" || 
      service.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
      service.description.toLowerCase().includes(searchQuery.toLowerCase());
    return matchesCategory && matchesSearch;
  });

  const makePhoneCall = (phone: string) => {
    window.location.href = `tel:${phone}`;
  };

  const openWebsite = (website: string) => {
    window.open(website, '_blank');
  };

  return (
    <div className="min-h-screen bg-background">
      {/* Header */}
      <div className="bg-primary text-primary-foreground p-4 pb-2">
        <div className="flex items-center gap-3 mb-4">
          <h1 className="text-2xl font-bold flex items-center gap-2">
            üè¢ –ì–æ—Ä–æ–¥—Å–∫–∏–µ —É—Å–ª—É–≥–∏
          </h1>
        </div>
        
        {/* Search Bar */}
        <div className="relative mb-4">
          <Input
            placeholder="–ü–æ–∏—Å–∫ —É—Å–ª—É–≥ –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π..."
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
            className="bg-background text-foreground border-0 h-12 text-base"
          />
        </div>
      </div>

      <div className="p-4">
        <Tabs value={activeTab} onValueChange={setActiveTab}>
          <TabsList className="grid w-full grid-cols-3 mb-4">
            <TabsTrigger value="services">–£—á—Ä–µ–∂–¥–µ–Ω–∏—è</TabsTrigger>
            <TabsTrigger value="utilities">–ñ–ö–•</TabsTrigger>
            <TabsTrigger value="emergency">–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ</TabsTrigger>
          </TabsList>

          {/* Services Tab */}
          <TabsContent value="services" className="space-y-4">
            <div className="text-sm text-muted-foreground mb-4">
              –ù–∞–π–¥–µ–Ω–æ —É—á—Ä–µ–∂–¥–µ–Ω–∏–π: {filteredServices.length}
            </div>
            
            {filteredServices.map((service) => (
              <Card key={service.id} className="hover:bg-accent/50 transition-colors">
                <CardHeader>
                  <div className="flex items-start justify-between">
                    <div className="flex items-start gap-3">
                      <span className="text-3xl">{service.icon}</span>
                      <div>
                        <CardTitle className="text-lg">{service.name}</CardTitle>
                        <CardDescription className="mt-1">
                          {service.description}
                        </CardDescription>
                        <div className="flex items-center gap-2 mt-2">
                          <Badge variant="secondary">{service.category}</Badge>
                          {service.rating && (
                            <div className="flex items-center gap-1">
                              <span className="text-yellow-500">‚òÖ</span>
                              <span className="text-xs text-muted-foreground">{service.rating}</span>
                            </div>
                          )}
                        </div>
                      </div>
                    </div>
                  </div>
                </CardHeader>
                <CardContent className="space-y-3">
                  <div className="space-y-2">
                    <div className="flex items-center gap-2 text-sm">
                      <span>üìû</span>
                      <span className="text-muted-foreground">–¢–µ–ª–µ—Ñ–æ–Ω:</span>
                      <Button
                        variant="link"
                        className="p-0 h-auto text-blue-600 hover:text-blue-800"
                        onClick={() => makePhoneCall(service.phone)}
                      >
                        {service.phone}
                      </Button>
                    </div>
                    
                    {service.address && (
                      <div className="flex items-center gap-2 text-sm">
                        <span>üìç</span>
                        <span className="text-muted-foreground">–ê–¥—Ä–µ—Å:</span>
                        <span>{service.address}</span>
                      </div>
                    )}
                    
                    <div className="flex items-center gap-2 text-sm">
                      <span>üïê</span>
                      <span className="text-muted-foreground">–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:</span>
                      <span>{service.workingHours}</span>
                    </div>
                    
                    {service.website && (
                      <div className="flex items-center gap-2 text-sm">
                        <span>üåê</span>
                        <span className="text-muted-foreground">–°–∞–π—Ç:</span>
                        <Button
                          variant="link"
                          className="p-0 h-auto text-blue-600 hover:text-blue-800"
                          onClick={() => openWebsite(service.website!)}
                        >
                          –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç
                        </Button>
                      </div>
                    )}
                  </div>
                  
                  <div className="flex gap-2 pt-2 border-t">
                    <Button 
                      size="sm" 
                      onClick={() => makePhoneCall(service.phone)}
                      className="flex-1"
                    >
                      üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å
                    </Button>
                    <Button variant="outline" size="sm" className="flex-1">
                      üìç –ú–∞—Ä—à—Ä—É—Ç
                    </Button>
                  </div>
                </CardContent>
              </Card>
            ))}
          </TabsContent>

          {/* Utilities Tab */}
          <TabsContent value="utilities" className="space-y-4">
            <Alert>
              <AlertDescription>
                üí° –î–ª—è —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ –∏–ª–∏ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ —Å–ª—É–∂–±—É 112
              </AlertDescription>
            </Alert>
            
            {utilities.map((utility) => (
              <Card key={utility.id} className="hover:bg-accent/50 transition-colors">
                <CardHeader>
                  <div className="flex items-start gap-3">
                    <span className="text-3xl">{utility.icon}</span>
                    <div>
                      <CardTitle className="text-lg">{utility.name}</CardTitle>
                      <CardDescription className="mt-1">
                        {utility.description}
                      </CardDescription>
                    </div>
                  </div>
                </CardHeader>
                <CardContent className="space-y-3">
                  <div className="space-y-2">
                    <div className="flex items-center gap-2 text-sm">
                      <span>üìû</span>
                      <span className="text-muted-foreground">–°–ø—Ä–∞–≤–æ—á–Ω–∞—è:</span>
                      <Button
                        variant="link"
                        className="p-0 h-auto text-blue-600 hover:text-blue-800"
                        onClick={() => makePhoneCall(utility.phone)}
                      >
                        {utility.phone}
                      </Button>
                    </div>
                    
                    {utility.emergencyPhone && (
                      <div className="flex items-center gap-2 text-sm">
                        <span>üö®</span>
                        <span className="text-muted-foreground">–ê–≤–∞—Ä–∏–π–Ω–∞—è —Å–ª—É–∂–±–∞:</span>
                        <Button
                          variant="link"
                          className="p-0 h-auto text-red-600 hover:text-red-800 font-medium"
                          onClick={() => makePhoneCall(utility.emergencyPhone!)}
                        >
                          {utility.emergencyPhone}
                        </Button>
                      </div>
                    )}
                    
                    <div className="flex items-center gap-2 text-sm">
                      <span>üåê</span>
                      <span className="text-muted-foreground">–°–∞–π—Ç:</span>
                      <Button
                        variant="link"
                        className="p-0 h-auto text-blue-600 hover:text-blue-800"
                        onClick={() => openWebsite(utility.website)}
                      >
                        –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç
                      </Button>
                    </div>
                  </div>
                  
                  <div className="flex gap-2 pt-2 border-t">
                    <Button 
                      size="sm" 
                      onClick={() => makePhoneCall(utility.phone)}
                      className="flex-1"
                    >
                      üìû –°–ø—Ä–∞–≤–æ—á–Ω–∞—è
                    </Button>
                    {utility.emergencyPhone && (
                      <Button 
                        size="sm" 
                        variant="destructive"
                        onClick={() => makePhoneCall(utility.emergencyPhone!)}
                        className="flex-1"
                      >
                        üö® –ê–≤–∞—Ä–∏—è
                      </Button>
                    )}
                  </div>
                </CardContent>
              </Card>
            ))}
          </TabsContent>

          {/* Emergency Tab */}
          <TabsContent value="emergency" className="space-y-4">
            <Alert className="border-red-200 bg-red-50 dark:bg-red-950/20">
              <AlertDescription className="text-red-800 dark:text-red-200">
                üö® –í —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö –∑–≤–æ–Ω–∏—Ç–µ –ø–æ —É–∫–∞–∑–∞–Ω–Ω—ã–º –Ω–æ–º–µ—Ä–∞–º. –í—Å–µ –≤—ã–∑–æ–≤—ã –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ.
              </AlertDescription>
            </Alert>
            
            <div className="grid gap-3">
              {emergencyServices.map((service, index) => (
                <Card key={index} className="hover:bg-accent/50 transition-colors border-l-4 border-l-red-500">
                  <CardContent className="p-4">
                    <div className="flex items-center justify-between">
                      <div className="flex items-center gap-3">
                        <span className="text-3xl">{service.icon}</span>
                        <div>
                          <h3 className="font-medium">{service.name}</h3>
                          <p className={`text-2xl font-bold ${service.color}`}>
                            {service.phone}
                          </p>
                        </div>
                      </div>
                      <Button
                        size="lg"
                        variant="destructive"
                        onClick={() => makePhoneCall(service.phone)}
                        className="min-w-[100px]"
                      >
                        –í—ã–∑–≤–∞—Ç—å
                      </Button>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
            
            {/* Additional Emergency Info */}
            <Card className="bg-blue-50 dark:bg-blue-950/20">
              <CardContent className="p-4">
                <h3 className="font-medium mb-2 flex items-center gap-2">
                  ‚ÑπÔ∏è –ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                </h3>
                <div className="text-sm text-muted-foreground space-y-1">
                  <p>‚Ä¢ –ü—Ä–∏ –≤—ã–∑–æ–≤–µ —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö —Å–ª—É–∂–± —á–µ—Ç–∫–æ –Ω–∞–∑–æ–≤–∏—Ç–µ –∞–¥—Ä–µ—Å –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏—è</p>
                  <p>‚Ä¢ –í—Å–µ –Ω–æ–º–µ—Ä–∞ —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö —Å–ª—É–∂–± —Ä–∞–±–æ—Ç–∞—é—Ç –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ</p>
                  <p>‚Ä¢ –í—ã–∑–æ–≤—ã —Å –º–æ–±–∏–ª—å–Ω—ã—Ö –∏ —Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä–Ω—ã—Ö —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –±–µ—Å–ø–ª–∞—Ç–Ω—ã</p>
                  <p>‚Ä¢ –ù–æ–º–µ—Ä 112 —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–∞–∂–µ –ø—Ä–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–π SIM-–∫–∞—Ä—Ç–µ</p>
                </div>
              </CardContent>
            </Card>
          </TabsContent>
        </Tabs>
      </div>
    </div>
  );
}